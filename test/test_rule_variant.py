# coding: utf-8

"""
    GroupBy Retail

    GroupBy Retail API

    The version of the OpenAPI document: 0.0
    Contact: ops@groupbyinc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from gb_retailapi_client.models.rule_variant import RuleVariant  # noqa: E501

class TestRuleVariant(unittest.TestCase):
    """RuleVariant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuleVariant:
        """Test RuleVariant
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuleVariant`
        """
        model = RuleVariant()  # noqa: E501
        if include_optional:
            return RuleVariant(
                biasing_profile_name = '',
                included_navigations = [
                    ''
                    ],
                template = gb_retailapi_client.models.rule_template.RuleTemplate(
                    name = '', 
                    enable_exact_matching = True, 
                    sections = [
                        gb_retailapi_client.models.rule_template_section.RuleTemplateSection(
                            zone_id = 56, 
                            name = '', 
                            zone_content = '', 
                            zone_type = 'QUERY', )
                        ], ),
                boosted_product_buckets = [
                    gb_retailapi_client.models.boosted_product_bucket.BoostedProductBucket(
                        products = [
                            ''
                            ], )
                    ],
                pinned_refinements = [
                    gb_retailapi_client.models.pinned_refinement.PinnedRefinement(
                        navigation = '', 
                        refinements = [
                            gb_retailapi_client.models.refinement.Refinement(
                                value = '', 
                                priority = 56, )
                            ], )
                    ],
                sort = gb_retailapi_client.models.sort.Sort(
                    field = '', 
                    order = null, ),
                value_filters = [
                    gb_retailapi_client.models.value_filter.ValueFilter(
                        field = '', 
                        value = '', 
                        number_value = 1.337, 
                        exclude = True, 
                        type = null, )
                    ],
                search_filters = [
                    gb_retailapi_client.models.search_filter.SearchFilter(
                        value = '', )
                    ],
                range_filters = [
                    gb_retailapi_client.models.range_filter.RangeFilter(
                        field = '', 
                        range = null, )
                    ]
            )
        else:
            return RuleVariant(
                biasing_profile_name = '',
                included_navigations = [
                    ''
                    ],
                template = gb_retailapi_client.models.rule_template.RuleTemplate(
                    name = '', 
                    enable_exact_matching = True, 
                    sections = [
                        gb_retailapi_client.models.rule_template_section.RuleTemplateSection(
                            zone_id = 56, 
                            name = '', 
                            zone_content = '', 
                            zone_type = 'QUERY', )
                        ], ),
                boosted_product_buckets = [
                    gb_retailapi_client.models.boosted_product_bucket.BoostedProductBucket(
                        products = [
                            ''
                            ], )
                    ],
                pinned_refinements = [
                    gb_retailapi_client.models.pinned_refinement.PinnedRefinement(
                        navigation = '', 
                        refinements = [
                            gb_retailapi_client.models.refinement.Refinement(
                                value = '', 
                                priority = 56, )
                            ], )
                    ],
                sort = gb_retailapi_client.models.sort.Sort(
                    field = '', 
                    order = null, ),
                value_filters = [
                    gb_retailapi_client.models.value_filter.ValueFilter(
                        field = '', 
                        value = '', 
                        number_value = 1.337, 
                        exclude = True, 
                        type = null, )
                    ],
                search_filters = [
                    gb_retailapi_client.models.search_filter.SearchFilter(
                        value = '', )
                    ],
                range_filters = [
                    gb_retailapi_client.models.range_filter.RangeFilter(
                        field = '', 
                        range = null, )
                    ],
        )
        """

    def testRuleVariant(self):
        """Test RuleVariant"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
