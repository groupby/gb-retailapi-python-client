# coding: utf-8

"""
    GroupBy Retail

    GroupBy Retail API

    The version of the OpenAPI document: 0.0
    Contact: ops@groupbyinc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from gb_retailapi_client.models.trigger_set import TriggerSet  # noqa: E501

class TestTriggerSet(unittest.TestCase):
    """TriggerSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TriggerSet:
        """Test TriggerSet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TriggerSet`
        """
        model = TriggerSet()  # noqa: E501
        if include_optional:
            return TriggerSet(
                query_pattern_triggers = [
                    gb_retailapi_client.models.query_pattern_trigger.QueryPatternTrigger(
                        type = 'CONTAINS', 
                        values = [
                            ''
                            ], 
                        patterns = [
                            gb_retailapi_client.models.pattern.Pattern()
                            ], )
                    ],
                selected_refinement_triggers = [
                    gb_retailapi_client.models.selected_refinement_trigger.SelectedRefinementTrigger(
                        field = '', 
                        value = '', 
                        range = gb_retailapi_client.models.range.Range(
                            low = 1.337, 
                            high = 1.337, ), 
                        type = 'RANGE', )
                    ],
                custom_parameter_triggers = [
                    gb_retailapi_client.models.custom_parameter_trigger.CustomParameterTrigger(
                        key = '', 
                        value = '', )
                    ]
            )
        else:
            return TriggerSet(
                query_pattern_triggers = [
                    gb_retailapi_client.models.query_pattern_trigger.QueryPatternTrigger(
                        type = 'CONTAINS', 
                        values = [
                            ''
                            ], 
                        patterns = [
                            gb_retailapi_client.models.pattern.Pattern()
                            ], )
                    ],
                selected_refinement_triggers = [
                    gb_retailapi_client.models.selected_refinement_trigger.SelectedRefinementTrigger(
                        field = '', 
                        value = '', 
                        range = gb_retailapi_client.models.range.Range(
                            low = 1.337, 
                            high = 1.337, ), 
                        type = 'RANGE', )
                    ],
                custom_parameter_triggers = [
                    gb_retailapi_client.models.custom_parameter_trigger.CustomParameterTrigger(
                        key = '', 
                        value = '', )
                    ],
        )
        """

    def testTriggerSet(self):
        """Test TriggerSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
