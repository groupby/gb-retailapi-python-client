# coding: utf-8

"""
    GroupBy Retail

    GroupBy Retail API

    The version of the OpenAPI document: 0.0
    Contact: ops@groupbyinc.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from gb_retailapi_client.models.search_response_dto import SearchResponseDto  # noqa: E501

class TestSearchResponseDto(unittest.TestCase):
    """SearchResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResponseDto:
        """Test SearchResponseDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResponseDto`
        """
        model = SearchResponseDto()  # noqa: E501
        if include_optional:
            return SearchResponseDto(
                id = '1d7dc797-e1cb-49dc-8791-f2317a218f13',
                area = 'Production',
                query = 'blue swetter',
                corrected_query = 'blue sweater',
                biasing_profile = 'Query',
                biasing_profile_applied_id = 1,
                filter = '',
                original_request = gb_retailapi_client.models.search_request.Search Request(
                    query = 'blue sweater', 
                    area = 'Production', 
                    collection = 'default', 
                    visitor_id = '38400000-8cf0-11bd-b23e-10b96e40000d', 
                    refinements = [
                        gb_retailapi_client.models.selected_refinement.Selected Refinement(
                            navigation_name = 'brands', 
                            type = null, 
                            value = '', 
                            low = 50, 
                            high = 100, 
                            source = 'Dynamic', 
                            or = False, )
                        ], 
                    page_size = 25, 
                    skip = 50, 
                    biasing_profile = '', 
                    biasing = gb_retailapi_client.models.biasing_profile.Biasing Profile(
                        biases = [
                            gb_retailapi_client.models.bias.Bias(
                                field = 'colorFamilies', 
                                content = 'Red', 
                                strength = 'ABSOLUTE_INCREASE', )
                            ], ), 
                    custom_url_params = [
                        gb_retailapi_client.models.custom_parameter.Custom Parameter(
                            key = 'landing-page', 
                            value = 'easter-2021', )
                        ], 
                    sorts = [
                        gb_retailapi_client.models.sort.Sort(
                            field = 'rating', 
                            order = 'Ascending', )
                        ], 
                    included_navigations = [
                        ''
                        ], 
                    excluded_navigations = [
                        ''
                        ], 
                    dynamic_facet = True, 
                    variant_rollup_keys = [
                        ''
                        ], 
                    pre_filter = '(categories:ANY("Men")) AND (ageGroups:ANY("adult")) AND (price: IN(150, 200))', 
                    site = '', 
                    response_mask = ["key.innerKey.value", "key2", "key.innerKey2.value2"], 
                    page_categories = ["Sales > 2017 Black Friday Deals"], 
                    spell_correction_mode = null, 
                    include_expanded_results = True, 
                    pin_unexpanded_results = True, 
                    debug = True, 
                    facet_limit = 56, 
                    login_id = '', 
                    overwrites = null, ),
                records = [
                    gb_retailapi_client.models.record.Record(
                        _id = '2cfcf5443046e6733a40608af8a35c95', 
                        _u = 'http://apparel1productsClothing.com/12345', 
                        _t = '3/4 length shorts', 
                        collection = 'productsClothing', 
                        all_meta = { }, )
                    ],
                total_record_count = 273,
                metadata = gb_retailapi_client.models.search_metadata.Search Metadata(
                    search_attribution_token = 'NtQKDAjYrrGEBhCWs_v3AhABGiQ2MDlhNjA5Yy0wMDAwLTI2ZDctODQ0OS1mNGY1ZTgwODc1YjQ', 
                    cached = False, 
                    total_time = 153, ),
                page_info = gb_retailapi_client.models.page_info.Page Info(
                    record_start = 50, 
                    record_end = 75, ),
                available_navigation = [
                    gb_retailapi_client.models.navigation.Navigation(
                        name = 'brands', 
                        display_name = 'Brand', 
                        type = 'Value', 
                        refinements = [
                            gb_retailapi_client.models.refinement.Refinement(
                                type = 'Value', 
                                count = 189, 
                                value = 'Surf's Up', 
                                low = 50, 
                                high = 100, )
                            ], 
                        or = True, 
                        source = '', 
                        metadata = [
                            gb_retailapi_client.models.metadata.Metadata(
                                key = '', 
                                value = '', )
                            ], 
                        place_id = '', )
                    ],
                selected_navigation = [
                    gb_retailapi_client.models.navigation.Navigation(
                        name = 'brands', 
                        display_name = 'Brand', 
                        type = 'Value', 
                        refinements = [
                            gb_retailapi_client.models.refinement.Refinement(
                                type = 'Value', 
                                count = 189, 
                                value = 'Surf's Up', 
                                low = 50, 
                                high = 100, )
                            ], 
                        or = True, 
                        source = '', 
                        metadata = [
                            gb_retailapi_client.models.metadata.Metadata(
                                key = '', 
                                value = '', )
                            ], 
                        place_id = '', )
                    ],
                redirect = 'www.example.com/2021-deals',
                experiments = [
                    gb_retailapi_client.models.experiment.Experiment(
                        experiment_id = 'experiment_variant_name', 
                        experiment_variant = 'Variant A', )
                    ],
                template = gb_retailapi_client.models.template.Template(
                    name = 'default', 
                    rule_name = 'Easter Sale 2021', 
                    trigger_set = null, 
                    zones = [
                        gb_retailapi_client.models.zone.Zone(
                            name = 'any string', 
                            type = null, 
                            content = 'any string', 
                            rich_content = 'any string', )
                        ], ),
                empty = True,
                site_params = [
                    gb_retailapi_client.models.metadata.Metadata(
                        key = '', 
                        value = '', )
                    ],
                debug = gb_retailapi_client.models.debug_info.Debug Info(
                    raw_search_request = [
                        None
                        ], 
                    raw_search_response = [
                        None
                        ], ),
                warnings = [
                    ''
                    ],
                include_expanded_results = True,
                facet_limit = 56,
                redirect_metadata = [
                    gb_retailapi_client.models.metadata.Metadata(
                        key = '', 
                        value = '', )
                    ]
            )
        else:
            return SearchResponseDto(
                filter = '',
                original_request = gb_retailapi_client.models.search_request.Search Request(
                    query = 'blue sweater', 
                    area = 'Production', 
                    collection = 'default', 
                    visitor_id = '38400000-8cf0-11bd-b23e-10b96e40000d', 
                    refinements = [
                        gb_retailapi_client.models.selected_refinement.Selected Refinement(
                            navigation_name = 'brands', 
                            type = null, 
                            value = '', 
                            low = 50, 
                            high = 100, 
                            source = 'Dynamic', 
                            or = False, )
                        ], 
                    page_size = 25, 
                    skip = 50, 
                    biasing_profile = '', 
                    biasing = gb_retailapi_client.models.biasing_profile.Biasing Profile(
                        biases = [
                            gb_retailapi_client.models.bias.Bias(
                                field = 'colorFamilies', 
                                content = 'Red', 
                                strength = 'ABSOLUTE_INCREASE', )
                            ], ), 
                    custom_url_params = [
                        gb_retailapi_client.models.custom_parameter.Custom Parameter(
                            key = 'landing-page', 
                            value = 'easter-2021', )
                        ], 
                    sorts = [
                        gb_retailapi_client.models.sort.Sort(
                            field = 'rating', 
                            order = 'Ascending', )
                        ], 
                    included_navigations = [
                        ''
                        ], 
                    excluded_navigations = [
                        ''
                        ], 
                    dynamic_facet = True, 
                    variant_rollup_keys = [
                        ''
                        ], 
                    pre_filter = '(categories:ANY("Men")) AND (ageGroups:ANY("adult")) AND (price: IN(150, 200))', 
                    site = '', 
                    response_mask = ["key.innerKey.value", "key2", "key.innerKey2.value2"], 
                    page_categories = ["Sales > 2017 Black Friday Deals"], 
                    spell_correction_mode = null, 
                    include_expanded_results = True, 
                    pin_unexpanded_results = True, 
                    debug = True, 
                    facet_limit = 56, 
                    login_id = '', 
                    overwrites = null, ),
                metadata = gb_retailapi_client.models.search_metadata.Search Metadata(
                    search_attribution_token = 'NtQKDAjYrrGEBhCWs_v3AhABGiQ2MDlhNjA5Yy0wMDAwLTI2ZDctODQ0OS1mNGY1ZTgwODc1YjQ', 
                    cached = False, 
                    total_time = 153, ),
                page_info = gb_retailapi_client.models.page_info.Page Info(
                    record_start = 50, 
                    record_end = 75, ),
                available_navigation = [
                    gb_retailapi_client.models.navigation.Navigation(
                        name = 'brands', 
                        display_name = 'Brand', 
                        type = 'Value', 
                        refinements = [
                            gb_retailapi_client.models.refinement.Refinement(
                                type = 'Value', 
                                count = 189, 
                                value = 'Surf's Up', 
                                low = 50, 
                                high = 100, )
                            ], 
                        or = True, 
                        source = '', 
                        metadata = [
                            gb_retailapi_client.models.metadata.Metadata(
                                key = '', 
                                value = '', )
                            ], 
                        place_id = '', )
                    ],
                selected_navigation = [
                    gb_retailapi_client.models.navigation.Navigation(
                        name = 'brands', 
                        display_name = 'Brand', 
                        type = 'Value', 
                        refinements = [
                            gb_retailapi_client.models.refinement.Refinement(
                                type = 'Value', 
                                count = 189, 
                                value = 'Surf's Up', 
                                low = 50, 
                                high = 100, )
                            ], 
                        or = True, 
                        source = '', 
                        metadata = [
                            gb_retailapi_client.models.metadata.Metadata(
                                key = '', 
                                value = '', )
                            ], 
                        place_id = '', )
                    ],
                experiments = [
                    gb_retailapi_client.models.experiment.Experiment(
                        experiment_id = 'experiment_variant_name', 
                        experiment_variant = 'Variant A', )
                    ],
                template = gb_retailapi_client.models.template.Template(
                    name = 'default', 
                    rule_name = 'Easter Sale 2021', 
                    trigger_set = null, 
                    zones = [
                        gb_retailapi_client.models.zone.Zone(
                            name = 'any string', 
                            type = null, 
                            content = 'any string', 
                            rich_content = 'any string', )
                        ], ),
                site_params = [
                    gb_retailapi_client.models.metadata.Metadata(
                        key = '', 
                        value = '', )
                    ],
                debug = gb_retailapi_client.models.debug_info.Debug Info(
                    raw_search_request = [
                        None
                        ], 
                    raw_search_response = [
                        None
                        ], ),
                redirect_metadata = [
                    gb_retailapi_client.models.metadata.Metadata(
                        key = '', 
                        value = '', )
                    ],
        )
        """

    def testSearchResponseDto(self):
        """Test SearchResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
